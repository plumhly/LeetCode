//
//  7.1 扑克牌.swift
//  算法
//
//  Created by Plum on 2021/2/28.
//  Copyright © 2021 Plum. All rights reserved.
//

import Foundation

/*
 7.1扑克牌请设计用于通用扑克牌的数据结构，并说明你会如何创建该数据结构的子类，实现“二十一点”游戏。（提示：#153，#275）

 7.2呼叫中心。设想你有个呼叫中心，员工分3级：接线员、主管和经理。客户来电会先分配

 给有空的接线员。若接线员处理不了，就必须将来电往上转给主管。若主管没空或是无法处理，则将来电往上转给经理。请设计这个问题的类和数据结构，并实现一种 dispatchCall（）方法，将客户来电分配给第一个有空的员工。（提示：#363）

 7.3音乐点唱机。运用面向对象原则，设计一款音乐点唱机。（提示：#198）

 7.4停车场。运用面向对象原则，设计一个停车场。（提示：#258）

 7.5在线图书阅读器。请设计在线图书阅读器系统的数据结构。（提示：#344）

 7.6拼图实现一个N×N的拼图程序。设计相关数据结构并提供一种拼图算法。假设你有一

 种 fitsWith方法，传入两块拼图，若两块拼图能拼在一起，则返回true（提示：#192，238,#283)

 7.7聊天服务器。请描述该如何设计一个聊天服务器。要求给出各种后台组件、类和方法的

 细节，并说明其中最难解决的问题会是什么。（提示：#213，#245，#271）

 78黑白棋“奥赛罗棋（黑白棋）的玩法如下：每一枚棋子的一面为白，一面为黑。游戏

 双方各执黑、白棋子对决，当一枚棋子的右或上下同时被对方棋子夹住，这枚棋子就算是被吃掉了，随即翻面为对方棋子的颜色。轮到你落子时，必须至少吃掉对方一枚棋子。任意一方无子可落时，游戏即告结束最后，棋盘上棋子较多的一方获胜。请运用面向对象设计方法，实现“奥赛罗棋”。（提示：#179，#228）

 7.9环状数组CircularArray。实现一个类该类需要支持类似于数组的数据结构且该数组

 可以被高效地轮转。如果可以的话，该类应该使用泛型类型（也被称作模板），同时可以通过标准循环语句for（objo：fo《bcircu1arArray）389《）进行迭代。（提示：#389）
 */

struct InterView_7_1 {
    struct Design1 {
        enum CardType {
            case spade, heart, plum, squar
        }
        
        struct Card {
            var number: Int
            var type: CardType
        }
    }
    
    // 设
    struct Design2 {
        class Card {
            var number: Int
            init(number: Int) {
                self.number = number
            }
        }
        
        // 黑桃
        class SpadeCard: Card {
            
        }
        
        // 红心
        class HeartCard: Card {
            
        }
        
        // 梅花
        class Plum: Card {
            
        }
        
        // 方块
        class SquarCard: Card {
            
        }
    }
}
